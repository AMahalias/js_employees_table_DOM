{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","tableBody","employeesList","getEmployees","list","employee","name","position","office","age","salary","children","child","arrayEmployees","innerText","split","employeeRow","push","body","insertAdjacentHTML","form","pushNotification","title","description","type","div","createElement","className","dataset","qa","innerHTML","append","setTimeout","removeChild","capitalizePhrase","word","replace","char","toUpperCase","createSalary","number","parseFloat","toLocaleString","addEventListener","e","preventDefault","data","FormData","dataObject","Object","fromEntries","entries","length","sortedList","sortName","sort","a","b","localeCompare","sortPosition","sortOffice","sortAge","age1","createNumber","sortSalary","salaryA","addSortedColumn","array","forEach","object","string","includes","slice","element","target","sortedByName","reverse","sortedByPosition","sortedByOffice","sortedByAge","sortedBySalary","row","closest","choosenRow","classList","remove","add","choosenCell","input","value","tagName","cellIndex","select","focus","parseInt","eventKeyDown","code","blur"],"mappings":"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","file":"main.e160491d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeader = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst employeesList = [];\n\nfunction getEmployees(list) {\n  const employee = {\n    name: list[0],\n    position: list[1],\n    office: list[2],\n    age: list[3],\n    salary: list[4],\n  };\n\n  return employee;\n}\n\nfor (const child of tableBody.children) {\n  const arrayEmployees = child.innerText.split('\\t');\n  const employeeRow = getEmployees(arrayEmployees);\n\n  employeesList.push(employeeRow);\n}\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\">\n    </label>\n\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n\n    <button>Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const dataObject = Object.fromEntries(data.entries());\n\n  if (dataObject.name.length < 4) {\n    pushNotification('Wrong name!',\n      'Name should be more than 4 letters. Correct it!', 'error');\n\n    return;\n  }\n\n  if (dataObject.age < 18 || dataObject.age > 90) {\n    pushNotification('Wrong age!',\n      'Employee dhould be adult and not older than 90 years.', 'error');\n\n    return;\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n  <tr>\n    <td>${capitalizePhrase(dataObject.name)}</td>\n    <td>${capitalizePhrase(dataObject.position)}</td>\n    <td>${dataObject.office}</td>\n    <td>${dataObject.age}</td>\n    <td>${createSalary(dataObject.salary)}</td>\n</tr>\n  `);\n\n  pushNotification('Success!',\n    'New employee is successfully added to the table', 'success');\n});\n\nfunction pushNotification(title, description, type) {\n  const body = document.body;\n  const div = document.createElement('div');\n\n  div.className = `notification ${type}`;\n  div.dataset.qa = 'notification';\n\n  div.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n  body.append(div);\n\n  setTimeout(() => {\n    body.removeChild(div);\n  }, 2000);\n};\n\nfunction capitalizePhrase(word) {\n  return word.replace(/(^|\\s)\\S/g, function(char) {\n    return char.toUpperCase();\n  });\n}\n\nfunction createSalary(number) {\n  return `$${parseFloat(number).toLocaleString('en-US')}`;\n}\n\nlet sortedList = false;\n\ntableHeader.addEventListener('click', e => {\n  const element = e.target;\n\n  switch (element.innerText) {\n    case ('Name'):\n      const sortedByName = sortName(employeesList);\n\n      if (sortedList) {\n        addSortedColumn(sortedByName.reverse());\n        sortedList = false;\n      } else {\n        addSortedColumn(sortedByName);\n        sortedList = true;\n      }\n\n      break;\n\n    case ('Position'):\n      const sortedByPosition = sortPosition(employeesList);\n\n      if (sortedList) {\n        addSortedColumn(sortedByPosition.reverse());\n        sortedList = false;\n      } else {\n        addSortedColumn(sortedByPosition);\n        sortedList = true;\n      }\n\n      break;\n\n    case ('Office'):\n      const sortedByOffice = sortOffice(employeesList);\n\n      if (sortedList) {\n        addSortedColumn(sortedByOffice.reverse());\n        sortedList = false;\n      } else {\n        addSortedColumn(sortedByOffice);\n        sortedList = true;\n      }\n      break;\n\n    case ('Age'):\n      const sortedByAge = sortAge(employeesList);\n\n      if (sortedList) {\n        addSortedColumn(sortedByAge.reverse());\n        sortedList = false;\n      } else {\n        addSortedColumn(sortedByAge);\n        sortedList = true;\n      }\n      break;\n\n    case ('Salary'):\n      const sortedBySalary = sortSalary(employeesList);\n\n      if (sortedList) {\n        addSortedColumn(sortedBySalary.reverse());\n        sortedList = false;\n      } else {\n        addSortedColumn(sortedBySalary);\n        sortedList = true;\n      }\n      break;\n  }\n});\n\nfunction sortName(list) {\n  return list.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  });\n}\n\nfunction sortPosition(list) {\n  return list.sort((a, b) => {\n    return a.position.localeCompare(b.position);\n  });\n}\n\nfunction sortOffice(list) {\n  return list.sort((a, b) => {\n    return a.office.localeCompare(b.office);\n  });\n}\n\nfunction sortAge(list) {\n  return list.sort((a, b) => {\n    const age1 = createNumber(a.age);\n    const age2 = createNumber(b.age);\n\n    return age1 - age2;\n  });\n}\n\nfunction sortSalary(list) {\n  return list.sort((a, b) => {\n    const salaryA = createNumber(a.salary);\n    const salaryB = createNumber(b.salary);\n\n    return salaryA - salaryB;\n  });\n}\n\nfunction addSortedColumn(array) {\n  tableBody.innerHTML = '';\n\n  return array.forEach(object => {\n    tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${object.name}</td>\n      <td>${object.position}</td>\n      <td>${object.office}</td>\n      <td>${object.age}</td>\n      <td>${object.salary}</td>\n    </tr>\n    `);\n  });\n}\n\nfunction createNumber(string) {\n  if (string.includes('$')) {\n    return +(string.slice(1).replace(',', '.'));\n  } else {\n    return +string;\n  }\n}\n\ntableBody.addEventListener('click', e => {\n  const row = e.target.closest('tr');\n  const choosenRow = tableBody.querySelector('.active');\n\n  if (choosenRow) {\n    choosenRow.classList.remove('active');\n  }\n\n  row.classList.add('active');\n});\n\ntableBody.addEventListener('dblclick', e => {\n  const choosenCell = e.target.innerText;\n  let input = document.createElement('input');\n\n  e.target.innerText = null;\n  input.className = 'cell-input';\n  input.type = 'text';\n  input.value = '';\n\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  if (e.target.cellIndex >= 3) {\n    input.type = 'number';\n  }\n\n  if (e.target.cellIndex === 2) {\n    const select = document.createElement('select');\n\n    select.dataset.qa = 'office';\n\n    select.insertAdjacentHTML('beforeend', `\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>`);\n\n    input = select;\n  }\n\n  e.target.append(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    if (input.value === '') {\n      e.target.innerText = choosenCell;\n\n      return;\n    }\n\n    if (e.target.cellIndex <= 2) {\n      e.target.innerText = capitalizePhrase(input.value);\n\n      return;\n    }\n\n    if (e.target.cellIndex === 4) {\n      if (parseInt(input.value)) {\n        e.target.innerText = createSalary(input.value);\n\n        return;\n      }\n    }\n\n    e.target.innerText = input.value;\n    input.remove();\n  });\n\n  input.addEventListener('keydown', eventKeyDown => {\n    if (eventKeyDown.code === 'Enter') {\n      input.blur();\n    }\n  });\n});\n"]}